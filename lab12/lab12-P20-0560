
Question Number 1:
All those cities whose time zone is Africa/Harare.

abubakar> db.cities.find({timezone: "Africa/Harare"})
[
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045965"),
    name: 'Zvishavane',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 35896,
    location: { latitude: -20.32674, longitude: 30.06648 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045966"),
    name: 'Victoria Falls',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 35761,
    location: { latitude: -17.92353, longitude: 25.84299 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045968"),
    name: 'Shurugwi',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 17075,
    location: { latitude: -19.67016, longitude: 30.00589 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd04596b"),
    name: 'Shangani',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 3835,
    location: { latitude: -19.78333, longitude: 29.36667 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd04596c"),
    name: 'Shamva',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 10317,
    location: { latitude: -17.31159, longitude: 31.57561 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd04596d"),
    name: 'Rusape',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 29292,
    location: { latitude: -18.52785, longitude: 32.12843 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd04596e"),
    name: 'Redcliff',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 33197,
    location: { latitude: -19.03333, longitude: 29.78333 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045970"),
    name: 'Nyazura',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 2110,
    location: { latitude: -18.70587, longitude: 32.16796 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045971"),
    name: 'Odzi',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 3438,
    location: { latitude: -18.96167, longitude: 32.40557 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045972"),
    name: 'Raffingora',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 1957,
    location: { latitude: -17.03333, longitude: 30.43333 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045973"),
    name: 'Plumtree',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 2148,
    location: { latitude: -20.48333, longitude: 27.81667 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045974"),
    name: 'Nyanga',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 4852,
    location: { latitude: -18.21667, longitude: 32.75 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045975"),
    name: 'Mvurwi',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 7970,
    location: { latitude: -17.03333, longitude: 30.85 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045977"),
    name: 'Murehwa',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 8559,
    location: { latitude: -17.64322, longitude: 31.784 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045978"),
    name: 'Mvuma',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 4331,
    location: { latitude: -19.27924, longitude: 30.52828 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd045979"),
    name: 'Mount Darwin',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 6349,
    location: { latitude: -16.77251, longitude: 31.58381 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd04597a"),
    name: 'Penhalonga',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 7681,
    location: { latitude: -18.89112, longitude: 32.69781 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd04597b"),
    name: 'Mutare',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 184205,
    location: { latitude: -18.9707, longitude: 32.67086 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd04597c"),
    name: 'Mazoe',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 9966,
    location: { latitude: -17.50404, longitude: 30.97388 }
  },
  {
    _id: ObjectId("6450c4da4d1b1ee6bd04597d"),
    name: 'Masvingo',
    country: 'ZW',
    timezone: 'Africa/Harare',
    population: 76290,
    location: { latitude: -20.06373, longitude: 30.82766 }
  }
]
Type "it" for more






__________________________________________________________________________________________

Question Number 2:
All those cities whose population is greater than 12985000.

abubakar> db.cities.find({population: {$gt: 12985000}})
[
  {
    _id: ObjectId("6450c4d74d1b1ee6bd02d68f"),
    name: 'Buenos Aires',
    country: 'AR',
    timezone: 'America/Argentina/Buenos_Aires',
    population: 13076300,
    location: { latitude: -34.61315, longitude: -58.37723 }
  },
  {
    _id: ObjectId("6450c4d84d1b1ee6bd02fa85"),
    name: 'Shanghai',
    country: 'CN',
    timezone: 'Asia/Shanghai',
    population: 14608512,
    location: { longitude: 31.22222, latitude: 121.45806 }
  }
]


__________________________________________________________________________________________
A city whose longitude equals to -58.37723. Your query should return
location and population fields only. (hint: use projection)

abubakar> db.cities.find({"location.longitude": -58.37723},{location:1,population:1,_id:0})
[
  {
    population: 13076300,
    location: { latitude: -34.61315, longitude: -58.37723 }
  }
]



__________________________________________________________________________________________

Question Number 3:
Write a query to update the population from 35000 to 55000 whose country is PK
and a location latitude of 73.2122. (hint: use cities collection)


abubakar> db.cities.updateMany({country:"PK","location.longitude":73.2122},{$set:{population:55000}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}

__________________________________________________________________________________________

Question Number 4:
Write a query to delete those documents whose timezone is Asia/Karachi and
country is PK. (use cities collection)


abubakar> db.cities.deleteMany({timezone:"Asia/Karachi",country:"PK"})
{ acknowledged: true, deletedCount: 424 }

__________________________________________________________________________________________

Question Number 5:
Write a query for finding the document whose birthname name array contains
(“Freeman, Crispin McDougal”) as a value. (use moviepeople collection)


abubakar> db.movies.find({"info.birthname":"Freeman, Crispin McDougal"})
[
  {
    _id: ObjectId("6450c52131a58df8216bb7b2"),
    'person-name': 'Freeman, Crispin',
    info: {
      quotes: [
        "On advice to aspiring voice-over actors: For myself, I'm in the favor of the more versatile kind of voice who can do all sorts of roles and transform. But to do that you have to have chops, and the best way to get them is through the classics, especially Shakespeare. It teaches you a lot about breathing, and idea and intention and rhythm. He's written the characters into the very poetry of the language, and if you try to get into and match his poetry it will take you out of your normal language patterns and that's the beginning of creating a character, not playing your mundane, everyday self. It's so verbally based, and in voice-acting, all you've got is your voice."
      ],
      trivia: [
        'Said he was a little nervous about taking on the role of Zelgadis in Slayers because the character had already been voiced by someone else. When it came to reinterpretting the character, he said he thought that Zelgadis had more of an axe to grind.',
        'Fluent in English and Spanish.',
        "Is a big fan of authors 'William Shakespeare (I)' (qv), 'J.R.R. Tolkien' (qv), 'Joseph Campbell (III)' (qv), 'Marshall McLuhan' (qv), and 'William Gibson (II)' (qv).",
        "Is a big fan of anime creators 'Hayao Miyazaki' (qv) and 'Osamu Tezuka (I)' (qv).",
        'Frequently does voice overs for various union and non-union voice production companies for some video games and mostly animes.',
        "Has a younger brother, 'Clark Freeman' (qv), and a younger sister, 'Cassidy Freeman' (qv).",
        'Graduated from Williams College with a B.A. in theater & a minor in computer science',
        'Graduated from Columbia University with an M.F.A. in acting',
        'Is one of the only English-speaking voice actors to voice the same character of all Xenosaga video game series. Crispin was the only voice actor to provide the English voice of Albedo and Gaignun Kukai of the series.',
        "On August 11, 2007, he married 'Izobel Carol' (qv) on The Big Island of Hawaii.",
        'He and Veronica Taylor both came to the anime Slayers series as replacements - she replaced Joani Baker as Amelia and he replaced Daniel Cronin as Zelgadis.'
      ],
      minibiography: [
        "Crispin is the oldest of three. He has a younger brother, Clark, and youngest sister, Cassidy. All three attended the Latin School of Chicago, where Crispin graduated in a class of 60 in 1990. Crispin had a Mac in 1985. To this day he is still an avid computer geek. He played no official team sports in school, but participated in ad hoc football played in Lincoln Park. Crispin was an active participant in many school plays both on and behind stage. He's also a genuinely nice and humble person."
      ],
      birthnotes: [ 'Chicago, Illinois, USA' ],
      birthdate: [ '9 February 1972' ],
      height: [ "6' 2" ],
      spouse: [ "'Izobel Carol' (qv) (11 August 2007 - present)" ],
      birthname: [ 'Freeman, Crispin McDougal' ]
    }
  }
]

__________________________________________________________________________________________
Retrieve all movies which were made in or before 1970 but after 1965? Your query should return title, year and rated fields only. in mongodb
----------------------------------------------------------------
db.movies.find(
  {
    $and: [
      { year: { $lte: 1970 } },
      { year: { $gt: 1965 } }
    ]
  },
  { title: 1, year: 1, rated: 1, _id: 0 }
)

------------------------------------------------------------

Find movies which were tagged as one of the following genres: "Sport", "Talk-Show", "News".

-----------------------------------------------------
db.movies.find(
  {
    genres: {
      $in: ["Sport", "Talk-Show", "News"]
    }
  }
)

--------------------------------------------------------------------

Write a query to list movies whose imdb.rating is greater than 8.5 or metacritic rating is greater than

85.
--------------------------------------------------------------------


db.movies.find(
  {
    runtime: { $gt: 180 },
    "imdb.rating": { $gt: 8 },
  },
  {
    _id: 0,
    title: 1,
    runtime: 1,
    "imdb.rating": 1,
  }
)
------------------------------------------------------------------------------------


 Find movies which were both: History and War genres, return the documents based on the descending order of year and then uses the limit caluse to limit the number of documents being returned to just 2.


db.movies.find(
  {
    genres: { $all: ["History", "War"] }
  }
).sort(
  {
    year: -1
  }
).limit(2)